# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Improved configuration with Numix theme colors for Chromebook
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!
#
# REQUIRED PACKAGES (Fedora):
# sudo dnf install brightnessctl libnotify thunar pavucontrol
#
# Optional packages:
# sudo dnf install alacritty blueman scrot picom rofi clipman dunst redshift blueman-applet

set $mod Mod4

# Numix Color Scheme
set $numix_orange #f9703e
set $numix_red #d64937
set $numix_dark_gray #2d2d2d
set $numix_gray #555753
set $numix_light_gray #dedede
set $numix_white #ffffff
set $numix_black #333333
set $numix_blue #5294cf

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Sans Mono 9

# Disable window titlebars (saves space and looks cleaner)
default_border pixel 2
default_floating_border pixel 2

# Gaps (optional - comment out if you prefer no gaps)
# gaps inner 5
# gaps outer 2

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex-autostart --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Optional compositor
# exec --no-startup-id picom --config ~/.config/picom/picom.conf

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Brightness controls (if on laptop)
bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl set +10%
bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl set 10%-

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# Alternative terminal
# bindsym $mod+Shift+Return exec --no-startup-id alacritty

# Firefox
bindsym $mod+b exec --no-startup-id firefox

# MS Edge
bindsym $mod+Shift+b exec --no-startup-id microsoft-edge-stable

# Zed editor
bindsym $mod+c exec --no-startup-id zed

# File manager
bindsym $mod+Shift+f exec --no-startup-id thunar

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher) with Numix colors
bindsym $mod+d exec --no-startup-id "dmenu_run -nf '$numix_light_gray' -nb '$numix_dark_gray' -sb '$numix_orange' -sf '$numix_white' -fn 'DejaVu Sans Mono-10' -p 'Run:'"
# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# Screenshot functionality
bindsym $mod+Print exec --no-startup-id "scrot -s ~/Pictures/screenshot_%Y-%m-%d_%H:%M:%S.png"
bindsym Print exec --no-startup-id "scrot ~/Pictures/screenshot_%Y-%m-%d_%H:%M:%S.png"

# Focus controls (vim-style)
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
# bindsym $mod+h split h
bindsym $mod+backslash split h

# split in vertical orientation
# bindsym $mod+v split v
bindsym $mod+minus split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1:Terminal"
set $ws2 "2:Firefox"
set $ws3 "3:Edge"
set $ws4 "4:Code"
set $ws5 "5:Files"
set $ws6 "6:Media"
set $ws7 "7:Chat"
set $ws8 "8:Work"
set $ws9 "9:Docs"
set $ws10 "10:Settings"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# Alternar entre layouts útiles
bindsym $mod+Ctrl+1 layout splith; exec notify-send "Layout" "Horizontal"
bindsym $mod+Ctrl+2 layout splitv; exec notify-send "Layout" "Vertical"
bindsym $mod+Ctrl+3 layout stacking; exec notify-send "Layout" "Stacking"
bindsym $mod+Ctrl+4 layout tabbed; exec notify-send "Layout" "Tabbed"

# Mover ventanas entre monitores (preparado para dual monitor)
bindsym $mod+Shift+greater move container to output right
bindsym $mod+Shift+less move container to output left

# Kill all en workspace actual
bindsym $mod+Shift+Ctrl+q [workspace="__focused__"] kill

# Focus urgent window
bindsym $mod+x [urgent=latest] focus

# Application-specific workspace assignments
assign [class="firefox"] $ws2
assign [class="Microsoft-edge"] $ws3
assign [class="Zed"] $ws4
assign [class="Thunar"] $ws5
assign [class="Spotify"] $ws6
assign [class="discord"] $ws7
assign [class="Slack"] $ws7
assign [class="TelegramDesktop"] $ws7
assign [class="LibreOffice"] $ws9
assign [class="Evince"] $ws9
assign [class="Gnome-system-monitor"] $ws10
assign [class="Pavucontrol"] $ws10

# Floating windows for specific applications
for_window [class="Arandr"] floating enable
for_window [class="Pavucontrol"] floating enable
for_window [class="Blueman-manager"] floating enable
for_window [title="^Open File$"] floating enable
for_window [window_role="pop-up"] floating enable
for_window [window_role="task_dialog"] floating enable
for_window [class="Pinentry"] floating enable
for_window [class="Gpick"] floating enable
for_window [class="Lxappearance"] floating enable

# Focus automático para aplicaciones críticas
for_window [class="firefox" urgent=latest] focus
for_window [class="Zed" urgent=latest] focus

# Tamaños específicos para aplicaciones flotantes
for_window [class="Gnome-calculator"] floating enable, resize set 350 450, move position center
for_window [class="Nm-connection-editor"] floating enable, resize set 600 400, move position center

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
# bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'Exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit' -f 'pango:DejaVu Sans Mono 10'"

# Abrir archivo/directorio rápido
# bindsym $mod+Ctrl+o exec --no-startup-id "thunar ~/Downloads"
bindsym $mod+Ctrl+h exec --no-startup-id "thunar ~/"
bindsym $mod+Ctrl+d exec --no-startup-id "thunar ~/Documents"

# Terminal en directorio específico
bindsym $mod+Shift+Return exec --no-startup-id "cd ~/Downloads && i3-sensible-terminal"

# Editor rápido de config
bindsym $mod+Shift+Ctrl+c exec --no-startup-id "zed ~/.config/i3/config"

# Lockscreen con timer
bindsym $mod+Ctrl+l exec --no-startup-id "notify-send 'Locking in 3 seconds...' && sleep 3 && i3lock"

# Power management menu
set $power_mode "Power: (l)ock, (e)xit, (s)uspend, (h)ibernate, (r)eboot, (p)oweroff"
mode $power_mode {
    bindsym l exec --no-startup-id i3lock, mode "default"
    bindsym e exec --no-startup-id i3-msg exit, mode "default"
    bindsym s exec --no-startup-id systemctl suspend, mode "default"
    bindsym h exec --no-startup-id systemctl hibernate, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym p exec --no-startup-id systemctl poweroff, mode "default"

    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Pause mode $power_mode

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.

        # bindsym j resize shrink width 10 px or 10 ppt
        # bindsym k resize grow height 10 px or 10 ppt
        # bindsym l resize shrink height 10 px or 10 ppt
        # bindsym semicolon resize grow width 10 px or 10 ppt

        bindsym h resize shrink width 5 px or 5 ppt
        bindsym j resize grow height 5 px or 5 ppt
        bindsym k resize shrink height 5 px or 5 ppt
        bindsym l resize grow width 5 px or 5 ppt

        # same bindings, but for the arrow keys
        # bindsym Left resize shrink width 10 px or 10 ppt
        # bindsym Down resize grow height 10 px or 10 ppt
        # bindsym Up resize shrink height 10 px or 10 ppt
        # bindsym Right resize grow width 10 px or 10 ppt

        bindsym Left resize shrink width 5 px or 5 ppt
        bindsym Down resize grow height 5 px or 5 ppt
        bindsym Up resize shrink height 5 px or 5 ppt
        bindsym Right resize grow width 5 px or 5 ppt

        # Bigger increments
        bindsym Shift+h resize shrink width 20 px or 20 ppt
        bindsym Shift+j resize grow height 20 px or 20 ppt
        bindsym Shift+k resize shrink height 20 px or 20 ppt
        bindsym Shift+l resize grow width 20 px or 20 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# class                 border  bground text    indicator child_border
# client.focused          #83CAFA #51A2DA #FFFFFF #83CAFA   #51A2DA
# client.focused_inactive #8C8C8C #4C4C4C #FFFFFF #4C4C4C   #8C8C8C
# client.unfocused        #4C4C4C #222222 #888888 #292D2E   #222222
# client.urgent           #EC69A0 #DB3279 #FFFFFF #DB3279   #DB3279
# client.placeholder      #000000 #0C0C0C #FFFFFF #000000   #0C0C0C
#
# client.background       #FFFFFF

# Numix Color Theme for Windows
client.focused          $numix_orange $numix_orange $numix_white $numix_blue $numix_orange
client.focused_inactive $numix_gray $numix_gray $numix_light_gray $numix_gray $numix_gray
client.unfocused        $numix_dark_gray $numix_dark_gray $numix_light_gray $numix_dark_gray $numix_dark_gray
client.urgent           $numix_red $numix_red $numix_white $numix_red $numix_red
client.placeholder      $numix_black $numix_black $numix_white $numix_black $numix_black

client.background       $numix_white


# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
# bar {
#   colors {
#     background #000000
#     statusline #FFFFFF
#     separator  #666666
#
#     focused_workspace  #83CAFA #51A2DA #FFFFFF
#     active_workspace   #3C6EB4 #294172 #FFFFFF
#     inactive_workspace #8C8C8C #4C4C4C #888888
#     urgent_workspace   #EC69A0 #DB3279 #FFFFFF
#     binding_mode       #b691d3 #A07CBC #FFFFFF
#   }
#   status_command i3status
# }

# i3bar configuration with Numix colors
bar {
    status_command i3status
    position top
    strip_workspace_numbers yes
    separator_symbol " | "
    workspace_buttons yes
    binding_mode_indicator yes

    # Mostrar números de workspace
    # strip_workspace_numbers no

    colors {
        background $numix_dark_gray
        statusline $numix_light_gray
        separator  $numix_gray

        focused_workspace  $numix_orange $numix_orange $numix_white
        active_workspace   $numix_blue $numix_blue $numix_white
        inactive_workspace $numix_gray $numix_gray $numix_light_gray
        urgent_workspace   $numix_red $numix_red $numix_white
        binding_mode       $numix_blue $numix_blue $numix_white
    }

    # Show tray icons
    tray_output primary
    tray_padding 2
}

# Workspace back and forth
workspace_auto_back_and_forth yes

# Window focus follows mouse (optional - comment out if you prefer click-to-focus)
focus_follows_mouse yes

# Alt+Tab simulado
bindsym Mod1+Tab focus right
bindsym Mod1+Shift+Tab focus left

# Workspace navigation más fluida
bindsym $mod+Ctrl+Right workspace next
bindsym $mod+Ctrl+Left workspace prev
bindsym $mod+Ctrl+Shift+Right move container to workspace next; workspace next
bindsym $mod+Ctrl+Shift+Left move container to workspace prev; workspace prev

# Language switching mode
set $lang_mode "Language: (e)nglish, (s)panish"
mode $lang_mode {
    bindsym e exec --no-startup-id "setxkbmap -layout us -variant altgr-intl", mode "default"
    bindsym s exec --no-startup-id "setxkbmap -layout es", mode "default"

    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+i mode $lang_mode

# Quick language toggle (Alt+Shift to switch between last two layouts)
bindsym $mod+Shift+i exec --no-startup-id "setxkbmap -query | grep -q 'layout:.*us' && setxkbmap -layout es || setxkbmap -layout us -variant altgr-intl"

# Rotación de pantalla (útil para algunos usos)
bindsym $mod+Ctrl+r exec --no-startup-id "xrandr --output eDP-1 --rotate normal && notify-send 'Screen' 'Normal rotation'"
bindsym $mod+Ctrl+Shift+r exec --no-startup-id "xrandr --output eDP-1 --rotate left && notify-send 'Screen' 'Rotated left'"

# Rotaciones adicionales
bindsym $mod+Ctrl+Shift+l exec --no-startup-id "xrandr --output eDP-1 --rotate right && notify-send 'Screen' 'Rotated right'"
bindsym $mod+Ctrl+Shift+u exec --no-startup-id "xrandr --output eDP-1 --rotate inverted && notify-send 'Screen' 'Upside down'"

# Modo de rotación de pantalla
set $rotate_mode "Rotate: (n)ormal, (l)eft, (r)ight, (u)pside down"
mode $rotate_mode {
    bindsym n exec --no-startup-id "xrandr --output eDP-1 --rotate normal", mode "default"
    bindsym l exec --no-startup-id "xrandr --output eDP-1 --rotate left", mode "default"
    bindsym r exec --no-startup-id "xrandr --output eDP-1 --rotate right", mode "default"
    bindsym u exec --no-startup-id "xrandr --output eDP-1 --rotate inverted", mode "default"

    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Ctrl+o mode $rotate_mode

# Gestor de energía más inteligente
# exec --no-startup-id "xset dpms 300 600 900" # Pantalla off después de inactividad

# Touchpad toggle (si usas mouse externo)
bindsym $mod+Ctrl+t exec --no-startup-id "xinput --list | grep -i touchpad | grep -o 'id=[0-9]*' | cut -d= -f2 | xargs -I{} xinput toggle {}"

# Chromebook-specific key bindings (alternative approach without xdotool)
# Quick application launchers (more useful than function keys)
bindsym $mod+F1 exec --no-startup-id i3-sensible-terminal
bindsym $mod+F2 exec --no-startup-id firefox
bindsym $mod+F3 exec --no-startup-id microsoft-edge-stable
bindsym $mod+F4 exec --no-startup-id zed
bindsym $mod+F5 exec --no-startup-id thunar
bindsym $mod+F6 exec --no-startup-id pavucontrol
bindsym $mod+F7 exec --no-startup-id "dmenu_run -nf '$numix_light_gray' -nb '$numix_dark_gray' -sb '$numix_orange' -sf '$numix_white' -fn 'DejaVu Sans Mono-10'"
bindsym $mod+F8 workspace 8
bindsym $mod+F9 workspace 9
bindsym $mod+F10 exec --no-startup-id i3lock
bindsym $mod+F11 fullscreen toggle
bindsym $mod+F12 mode $power_mode

# Modo de sistema para configuraciones rápidas
# set $system_mode "System: (w)ifi, (b)luetooth, (a)udio, (d)isplay, (p)ower, (n)etwork"
# mode $system_mode {
#     bindsym w exec --no-startup-id nm-connection-editor, mode "default"
#     bindsym b exec --no-startup-id blueman-manager, mode "default"
#     bindsym a exec --no-startup-id pavucontrol, mode "default"
#     bindsym d exec --no-startup-id arandr, mode "default"
#     bindsym p exec --no-startup-id xfce4-power-manager-settings, mode "default"
#     bindsym n exec --no-startup-id "nmtui", mode "default"
#
#     bindsym Return mode "default"
#     bindsym Escape mode "default"
# }
# bindsym $mod+Ctrl+s mode $system_mode

# Modo de aplicaciones para lanzar apps específicas
# set $apps_mode "Apps: (c)alculator, (t)op, (f)iles, (s)creenshot, (v)ideo"
# mode $apps_mode {
#     bindsym c exec --no-startup-id gnome-calculator, mode "default"
#     bindsym t exec --no-startup-id "i3-sensible-terminal -e htop", mode "default"
#     bindsym f exec --no-startup-id thunar, mode "default"
#     bindsym s exec --no-startup-id "scrot -s", mode "default"
#     bindsym v exec --no-startup-id vlc, mode "default"
#
#     bindsym Return mode "default"
#     bindsym Escape mode "default"
# }
# bindsym $mod+Ctrl+a mode $apps_mode

# Alternative window management (useful for small screens)
bindsym $mod+Tab workspace back_and_forth

# Volume controls (alternative to media keys) with notifications
bindsym $mod+equal exec --no-startup-id "pactl set-sink-volume @DEFAULT_SINK@ +5% && $refresh_i3status && notify-send 'Volume Up' '$(pactl get-sink-volume 0 | grep -oP '\d+%' | head -1)'"
bindsym $mod+Shift+minus exec --no-startup-id "pactl set-sink-volume @DEFAULT_SINK@ -5% && $refresh_i3status && notify-send 'Volume Down' '$(pactl get-sink-volume 0 | grep -oP '\d+%' | head -1)'"
bindsym $mod+Shift+equal exec --no-startup-id "pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status && notify-send 'Volume Toggle' 'Muted/Unmuted'"

# Alternative brightness controls (using bracket keys) with notifications
bindsym $mod+bracketleft exec --no-startup-id "brightnessctl set 10%- && notify-send 'Brightness Down' '$(brightnessctl g)'"
bindsym $mod+bracketright exec --no-startup-id "brightnessctl set +10% && notify-send 'Brightness Up' '$(brightnessctl g)'"

# Special characters mode for Spanish/International typing
set $char_mode "Special chars: (1)¡ (2)¿ (3)ñ (4)Ñ (5)ü (6)Ü (7)€ (8)£ (9)¥"
mode $char_mode {
    bindsym 1 exec --no-startup-id notify-send "Type: ¡ with AltGr+1", mode "default"
    bindsym 2 exec --no-startup-id notify-send "Type: ¿ with AltGr+/", mode "default"
    bindsym 3 exec --no-startup-id notify-send "Use AltGr+n for ñ", mode "default"
    bindsym 4 exec --no-startup-id notify-send "Use AltGr+Shift+n for Ñ", mode "default"
    bindsym 5 exec --no-startup-id notify-send "Use AltGr+u for ü", mode "default"
    bindsym 6 exec --no-startup-id notify-send "Use AltGr+Shift+u for Ü", mode "default"
    bindsym 7 exec --no-startup-id notify-send "Use AltGr+5 for €", mode "default"
    bindsym 8 exec --no-startup-id notify-send "Use AltGr+Shift+3 for £", mode "default"
    bindsym 9 exec --no-startup-id notify-send "Type help for ¥", mode "default"

    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+semicolon mode $char_mode

# Additional useful shortcuts for Chromebook
bindsym $mod+comma exec --no-startup-id "notify-send 'i3 Help' 'Super+F1-F12: Quick apps | Super+Tab: Last workspace'"

# Startup applications
exec --no-startup-id "setxkbmap -layout us -variant altgr-intl" # International keyboard layout
exec --no-startup-id "xset r rate 300 50" # Faster key repeat
exec --no-startup-id "setxkbmap -option caps:escape" # Map Caps Lock to Escape (useful for vim/terminal)

# Aplicaciones de inicio en background
# exec_always --no-startup-id "pgrep -x dunst || dunst &"
# exec_always --no-startup-id "pgrep -x redshift || redshift -l 9.0:-79.5 &"
# exec --no-startup-id "setxkbmap -option grp:alt_shift_toggle us,es"

# Restaurar layout al inicio
# exec --no-startup-id "i3-msg 'workspace 1; layout splith'"

# Auto-start aplicaciones en workspaces específicos después de delay
# exec --no-startup-id "sleep 5 && i3-msg 'workspace 2; exec firefox' || true"
